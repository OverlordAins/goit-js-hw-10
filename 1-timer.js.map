{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector(\"[data-start]\");\nconst daysEl = document.querySelector(\"[data-days]\");\nconst hoursEl = document.querySelector(\"[data-hours]\");\nconst minutesEl = document.querySelector(\"[data-minutes]\");\nconst secondsEl = document.querySelector(\"[data-seconds]\");\nconst inputEl = document.querySelector(\"#datetime-picker\");\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDates[0];\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nstartBtn.addEventListener(\"click\", () => {\n  startBtn.disabled = true;\n  inputEl.disabled = true;\n\n  timerId = setInterval(() => {\n    const diff = userSelectedDate - new Date();\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      inputEl.disabled = false;\n      return;\n    }\n\n    updateTimerUI(convertMs(diff));\n  }, 1000);\n});\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["startBtn","daysEl","hoursEl","minutesEl","secondsEl","inputEl","userSelectedDate","timerId","options","selectedDates","iziToast","flatpickr","diff","updateTimerUI","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAU,SAAS,cAAc,kBAAkB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,GAAK,IAAI,MAC1BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDV,EAAS,SAAW,KAEpBM,EAAmBG,EAAc,CAAC,EAClCT,EAAS,SAAW,GAExB,CACF,EAEAW,EAAUN,EAASG,CAAO,EAE1BR,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBK,EAAQ,SAAW,GAEnBE,EAAU,YAAY,IAAM,CAC1B,MAAMK,EAAON,EAAmB,IAAI,KAEpC,GAAIM,GAAQ,EAAG,CACb,cAAcL,CAAO,EACrBM,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,EAAG,EAC3DR,EAAQ,SAAW,GACnB,MACF,CAEAQ,EAAcC,EAAUF,CAAI,CAAC,CAC/B,EAAG,GAAI,CACT,CAAC,EAED,SAASC,EAAc,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDjB,EAAO,YAAckB,EAAeJ,CAAI,EACxCb,EAAQ,YAAciB,EAAeH,CAAK,EAC1Cb,EAAU,YAAcgB,EAAeF,CAAO,EAC9Cb,EAAU,YAAce,EAAeD,CAAO,CAChD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}